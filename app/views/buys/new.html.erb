<script>

  document.addEventListener('DOMContentLoaded', function() {
    defaultQuantity.value = `${localStorage.getItem("btcQuantity")}`;
    defaultToken.value = `${localStorage.getItem("currency")}`;
},);

</script>

 <div class="container">
  <div class="row" >
    <div class="col-xs-12 col-sm-6 col-sm-offset-3">

      <div class="form-buy">


<%= form_for(@buy) do |f| %>
  <div class="form-group">

    <%= f.label :token %>
    <br>
      <div class="search_categories">
        <div class="select">
          <%= f.select(:token, [['Bitcoin', 1], ['Ethereum', 2], ['Bitcoin Cash', 3], ['Ripple', 4], ['EOS', 5] ], {}, id: "defaultToken") %>
        </div>
       </div>

    <br>
    <p style="text-align: center; font-weight: bold;">Current price:<br> <span style="text-align: center; font-weight: normal;">£</span><span id = "buyprice" style="text-align: center; font-weight: normal;"></span></p>

    <%= f.label :quantity %>
    <%= f.text_field :quantity, autocomplete: "off", id: "defaultQuantity", class: 'form-control' %>
<!--
    <form>
          BTC:<br>
          <input type="text" name="amount" value=1 text-align="right" style="width: 100px; color: black" id="quantity"><br>
    </form> -->

        <p style="display: inline-block;
    max-width: 100%;
    margin-bottom: 5px;
    margin-top: 20px;
    font-weight: bold;">Total Cost (£)</p>


        <input type="text" autocomplete="off" name="amount" value="..." text-align="right" id="cost" style="width: 100%; color: black;
    border-radius: 6px;
    display: block;
    width: 100%;
    height: 39px;
    padding: 6px 12px;
    font-size: 18px;
    line-height: 1.42857;
    color: #000000;
    background-color: #fff;
    background-image: none;
    border: 1px solid #ccc;
    border-radius: 2px;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;"><br>





    <!-- <form>
          £:<br>
          <input type="text" name="amount" style="width: 100px; color: black" id="buyprice"><br>
    </form> -->

    <%= f.label :wallet, 'Wallet Address' %>
    <%= f.text_field :wallet, class: 'form-control', :required => true%>
    <a href="https://www.blockchain.com/wallet/#/%20%20/", style="font-size: 14px", target="_blank">I don't have a wallet</a>


    <!-- <%= f.text_field :token, class: 'form-control' %> -->
  </div>
  <p>All payments must be made by SEPA bank transfer.</p>

  <%= f.submit 'Place Order', class: 'btn' %>
<% end %>

 </div>

  </div>
</div>

<script>
  //  window.onload = function() {
  // setInterval(setprice, 10);
  // }
  // window.onload = function() {
  // setInterval(setprice, 10000);
  // };

  const token = document.getElementById('defaultToken')
  const buyprice = document.getElementById('buyprice');
  const cost = document.getElementById('cost');
  const quantity = document.getElementById('defaultQuantity');

    document.addEventListener("DOMContentLoaded", function() {
    setPrice();
    setInterval(setPrice, 10000);
});

    buyprice.addEventListener

    token.addEventListener("change", function() {
  setPrice();
});
    quantity.addEventListener("keyup", function() {
  updateCost();
  window.userState = "quantity"
  console.log(window.userState)
});

  cost.addEventListener("keyup", function() {
  updateQuantity();
  window.userState = "cost"
  console.log(window.userState)
});





    function setPrice(){
    if (token.value == 1){
    setBtcPrice()
    } else if (token.value == 2){
    setEthPrice()
    }
    else if (token.value == 3){
    setBchPrice()
    }
    else if (token.value == 4){
    setXrpPrice()
    }
    else if (token.value == 5){
    setEosPrice()
    }
  };

  function setBtcPrice(){
  fetch("https://api.kraken.com/0/public/Ticker?pair=XXBTZEUR")
  .then(response => response.json())
  .then((data) => {
    // new_price = data.result.XXBTZEUR.c[0]*1.025;

    // if (new_price != window.price){
    window.price = data.result.XXBTZEUR.c[0]*1.025;
    buyprice.innerHTML = parseFloat(window.price).toFixed(2);
    console.log(window.price);
      if (window.userState == "cost"){
        updateQuantity();
      }
      else{
        updateCost();
      }

      });
    }


    function setEthPrice(){
  fetch("https://api.kraken.com/0/public/Ticker?pair=XETHZEUR")
  .then(response => response.json())
  .then((data) => {
    // new_price = data.result.XETHZEUR.c[0]*1.025;

    // if (new_price != window.price){
    window.price = data.result.XETHZEUR.c[0]*1.025;
    buyprice.innerHTML = parseFloat(window.price).toFixed(2);
    console.log(window.price);
      if (window.userState == "cost"){
        updateQuantity();
      }
      else{
        updateCost();
      }
      });
    }

     function setBchPrice(){
  fetch("https://api.kraken.com/0/public/Ticker?pair=BCHEUR")
  .then(response => response.json())
  .then((data) => {

    // if (new_price != window.price){
    window.price = data.result.BCHEUR.c[0]*1.025;
    buyprice.innerHTML = parseFloat(window.price).toFixed(2);
    console.log(window.price);
      if (window.userState == "cost"){
        updateQuantity();
      }
      else{
        updateCost();
      }
      });
    }

     function setXrpPrice(){
  fetch("https://api.kraken.com/0/public/Ticker?pair=XXRPZEUR")
  .then(response => response.json())
  .then((data) => {

    // if (new_price != window.price){
    window.price = data.result.XXRPZEUR.c[0]*1.025;
    buyprice.innerHTML = parseFloat(window.price).toFixed(2);
    console.log(window.price);
      if (window.userState == "cost"){
        updateQuantity();
      }
      else{
        updateCost();
      }
      });
    }

  //   function setXrpPrice(){
  // fetch("https://api.kraken.com/0/public/Ticker?pair=XXRPZEUR")
  // .then(response => response.json())
  // .then((data) => {

  //   // if (new_price != window.price){
  //   window.price = data.result.XXRPZEUR.c[0]*1.025;
  //   buyprice.innerHTML = parseFloat(window.price).toFixed(2);
  //   console.log(window.price);
  //     if (window.userState == "cost"){
  //       updateQuantity();
  //     }
  //     else{
  //       updateCost();
  //     }
  //     });
  //   }


    function setEosPrice(){
  fetch("https://api.kraken.com/0/public/Ticker?pair=EOSEUR")
  .then(response => response.json())
  .then((data) => {

    // if (new_price != window.price){
    window.price = data.result.EOSEUR.c[0]*1.025;
    buyprice.innerHTML = parseFloat(window.price).toFixed(2);
    console.log(window.price);
      if (window.userState == "cost"){
        updateQuantity();
      }
      else{
        updateCost();
      }
      });
    }






    // window.pbuy = (parseFloat(price)*1.025).toFixed(2);
    // window.psell = (parseFloat(price)*0.98).toFixed(2);

    // buyprice.innerHTML = parseFloat(window.price).toFixed(2);
    // updateCost();

    // if (cost.value == 2)
    // updateCost();

    // console.log(quantity.value);

    // console.log(pbuy)
    // buy.innerHTML = window.pbuy;
    // sell.innerHTML = window.psell;

    // document.getElementById("buyprice").value = ` ${(btcquantity.value * window.pbuy).toFixed(2)}`;

    // document.getElementById("btcsellprice").value = ` ${(btcsellquantity.value * window.psell).toFixed(2)}`;

    // document.getElementById("buyprice").placeholder = window.pbuy;
    // buyprice.placeholder = window.pbuy;


  function updateCost(){
     cost.value = (parseFloat(window.price).toFixed(2)) * parseFloat(quantity.value);
     console.log(window.price)
  }

   function updateQuantity(){

    if (token.value == 1){
    quantity.value = (parseFloat(cost.value) / (parseFloat(window.price).toFixed(2))).toFixed(8);
    } else if (token.value == 2){
    quantity.value = (parseFloat(cost.value) / (parseFloat(window.price).toFixed(2))).toFixed(18);
    }
    else if (token.value == 3){
    quantity.value = (parseFloat(cost.value) / (parseFloat(window.price).toFixed(2))).toFixed(8);
    }
    else if (token.value == 4){
    quantity.value = (parseFloat(cost.value) / (parseFloat(window.price).toFixed(2))).toFixed(6);
    }
    else if (token.value == 5){
    quantity.value = (parseFloat(cost.value) / (parseFloat(window.price).toFixed(2))).toFixed(4);
    }


     console.log(window.price)
     // console.log(parseFloat(window.price).toFixed(2)) * parseFloat(quantity.value)
  }


//   if (token.value === '1') {
//     console.log('you said coke!');
// } else {
//     console.log('why didn\'t you say coke!?');
// }

</script>

<!--
<script>
    window.onload = function() {
  setInterval(increment, 10000);
};

var n = 0;
const buy1 = document.getElementById("buy1");

function increment(){
  fetch("https://api.kraken.com/0/public/Ticker?pair=XXBTZEUR")
  .then(response => response.json())
  .then((data) => {
    // console.log(data.result.XXBTZEUR.c[0]);
    const price = data.result.XXBTZEUR.c[0] ;
    console.log(price);
    console.log(price * 1.025)
    buy1.innerHTML = price;
  });

  n++;
  return n;
  console.log("Hello world!");
  console.log(n);
}

  </script>
 -->
